src:
  structure.yaml:
    content: |-
      Three.jsを用いた地球、月、人工衛星の軌道シミュレーション (単一tsxファイル)
      - 内容:
        - 地球-月系における様々な軌道タイプのシミュレーション
        - 三種類の軌道カテゴリ（ラグランジュ点軌道、地球同期軌道、月軌道）
        - 各軌道タイプに対応した人工衛星の動きと軌跡表示
        - インタラクティブなカメラ操作と追尾モード
        - 視認性を重視した天体表現（サイズ誇張、鮮やかな色彩）
        - パーティクルシステムによる美しい軌跡表示
        - モダンで知的なUI設計（タブ式軌道選択、スライダーコントロール）
        - 単一TSXファイルによる完結したシミュレーション
        - 上下分割レイアウト（上部Three.js領域、下部操作パネル）
        - Three.js領域は横長アスペクト比を維持
      - 依存関係:
        - Three.jsライブラリ
      - エージェント選定理由:
        claude-3-5-sonnet-20241022は、複雑な物理シミュレーション、Three.jsとの連携、
        パーティクルシステム、UIデザインの融合など、この多面的なプロジェクトの要件を
        効率的に処理できる高度な推論能力と創造性を備えています。
      - API選定理由:
        Three.jsは、WebGLを抽象化し、複雑な3Dアニメーションとインタラクティブな
        シミュレーションを効率的に実装するための最適なライブラリです。
    dependency: []
    agent: "claude-3-5-sonnet-20241022"
    api: []
  components:
    OrbitSimulation.tsx:
      content: |-
        地球・月・人工衛星の軌道シミュレーションコンポーネント
        内容:
        - 全体レイアウト:
          * 上下二分割構造 (上部シミュレーション、下部操作パネル)
          * 上部: Three.jsシミュレーション領域 (横長アスペクト比を維持)
          * 下部: 操作パネル (コンパクトなカード形式)
          * 画面サイズに関わらずシミュレーション領域は横長を維持
          * スムーズなレスポンシブデザイン (モバイル対応)
          
        - Three.jsシーン設定:
          * 黒い宇宙背景と散りばめられた星のパーティクル
          * 環境光とスポットライトによる天体照明
          * 高品質なレンダラー設定 (アンチエイリアス、HDR)
          * 横長アスペクト比に最適化されたカメラ設定 (16:9または3:2推奨)
          * ウィンドウリサイズでもアスペクト比維持
          
        - 天体モデル:
          * 地球: 
            - サイズ: 実際の5倍に誇張
            - 色彩: 鮮やかな青(ウルトラマリン)
            - テクスチャ: 雲は白、陸地は明るい緑で強調
            - 自転アニメーション
          * 月:
            - サイズ: 実際の5倍に誇張
            - 色彩: 鮮やかな黄色(レモンイエロー)
            - テクスチャ: クレーターは濃いオレンジで強調
            - 公転・自転アニメーション (地球-月距離は実際の半分)
          * 人工衛星: 
            - サイズ: 実際のサイズの20倍に誇張（視認性のため大きめに表示）
            - 形状: 太陽電池パネルを広げた特徴的な衛星形状
            - 色彩: 光沢のあるメタリックシルバーのボディ、ゴールドの太陽電池パネル
            - エフェクト: 軌道タイプに応じた明るいハイライト効果
            - アニメーション: 軸回転と太陽電池パネルの微細な動き
            - 太陽光反射エフェクト: 軌道位置に応じた明滅効果
            
        - 軌跡表示システム:
          * パーティクルベースの発光トレイル
          * 月の軌跡: レモンイエロー (#ffd700)、10秒フェードアウト
          * 衛星の軌跡: 軌道タイプごとに固有色、5秒フェードアウト
          * グロー効果: 内側白色から外側は軌道特有色
          * 微細なランダム揺らぎによる生命感
          
        - 軌道タイプの実装:
          * ラグランジュ点軌道 (10種類):
            - 5つのラグランジュ点 (L1-L5) 静止点
            - L1-L3ハロー軌道 (準安定軌道)
            - L4-L5リサージュ軌道
            - 表示色: 鮮やかな紫 (#9c27b0)
          * 地球同期軌道 (6種類):
            - 静止衛星軌道 (GEO)
            - 対地同期軌道 (GSO: 赤道/中緯度)
            - 準天頂軌道 (QZO: 8の字/非対称)
            - モルニヤ軌道 (高楕円)
            - 表示色: 鮮やかな青 (#2196f3)
          * 月軌道 (6種類):
            - 月低軌道 (LLO: 円形/楕円形/極周回)
            - 月フローズン軌道 (安定軌道)
            - 月-地球転移軌道
            - 表示色: 鮮やかな緑 (#4caf50)
            
        - 下部操作パネル (知的でモダンなUI):
          * レイアウト:
            - 横幅全体に広がるカード形式
            - 高さは画面の30%を超えない設計
            - タブ式で機能をカテゴリ分け
          * メインタブ:
            - 軌道選択タブ: 軌道カテゴリ選択とリスト
            - コントロールタブ: シミュレーション速度など
            - 設定タブ: 表示設定など
          * 軌道選択UI:
            - 3つのメインカテゴリを上部タブで表示 (ラグランジュ点/地球同期/月軌道)
            - 選択したカテゴリ内の軌道を下部グリッドで表示
            - 各軌道アイテムには小さなアイコンと名前を表示
            - 選択中の軌道は強調表示
          * コントロールUI:
            - シミュレーション速度スライダー (0.1x-10.0x)
            - 軌跡長さ調整スライダー (1-10秒)
            - 衛星サイズ調整スライダー (10x-50x倍)
            - 再生/一時停止、リセットボタン (水平に配置)
            - 軌跡表示切替スイッチ
          * 設定UI:
            - カメラモード選択 (自由/追尾)
            - 追尾対象選択 (地球/月/衛星/ラグランジュ点)
            - テーマ切替 (ライト/ダーク)
          * カラーテーマ:
            - ベースカラー: 暗い紺 (#121232)
            - アクセントカラー: 明るい水色 (#4fc3f7)
            - ダークモード対応
          * フォント:
            - 見出し: "Space Grotesk"
            - 本文: "Inter"
            
        - カメラシステム:
          * OrbitControlsによるマウス操作 (回転/ズーム)
          * 追尾モード: 地球/月/衛星/各ラグランジュ点切替
          * スムーズなトランジション
          * 衛星追尾時の自動ズーム調整 (衛星を適切なサイズで表示)
          * 横長ビューに最適化されたカメラ設定
          
        - 物理計算:
          * 準正確な重力方程式 (簡略化)
          * 地球-月-衛星の相互作用
          * ラグランジュ点の安定性を反映
          * 軌道ごとの正確な軌道要素
          
        - パフォーマンス最適化:
          * requestAnimationFrameの効率的な使用
          * オブジェクトプーリング (パーティクル再利用)
          * LOD (Level of Detail) 実装
          * メモリリーク防止
          * カメラ視点に基づく最適な描画範囲調整

        agent選定理由: claude-3-5-sonnet-20241022は、複雑な物理シミュレーション、Three.jsとの連携、パーティクルシステム、UIデザインの融合など、この多面的なプロジェクトの要件を効率的に処理できる高度な推論能力と創造性を備えています。

        api選定理由: Three.jsは、WebGLを抽象化し、複雑な3Dアニメーションとインタラクティブなシミュレーションを効率的に実装するための最適なライブラリです。
      dependency: []
      agent: "claude-3-5-sonnet-20241022"
      api: []